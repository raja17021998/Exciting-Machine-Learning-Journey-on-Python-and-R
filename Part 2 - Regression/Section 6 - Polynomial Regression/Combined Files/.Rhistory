R<-"Python"
R
q()
a<="::"
a<-"j::::"
a
q()
u,<-7
u<-7
u
q()
setwd("E:/Machine Learning Files/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 6 - Polynomial Regression/Combined Files")
#Polynomial Regression
#problems with non-linear relationships
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset= dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting Linear Regression to datset
lin_reg= lm(formula = Salary ~ .,
data = dataset)
#Fitting Polynomial Regression to dataset
dataset$Level2 = dataset$Level^2
poly_reg= lm(formula = Salary ~ .,
data= dataset)
#Visualising Linear Regression details
library(ggplot2)
ggplot()+
geom_point(aes(x=dataset$Level , y=dataset$Salary),
color = 'red')+
geom_line(aes(x=dataset$Level , y=dataset$predict(lin_reg, newdata=dataset)),
color = 'blue')+
ggtitle('Truth or Bluff: Linear Regression')+
xlab("Level")+
ylab('Salary')
#Visulising Polynomial Reression details
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
color='red')+
geom_line(aes(x=dataset$Level, y=predict(poly_reg, newdata= dataset)),
ggtitle('Truth or bluff(Polynomial Regression)')+
xlab('Level')+
ylab('Salary'))
#Polynomial Regression
#problems with non-linear relationships
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset= dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting Linear Regression to datset
lin_reg= lm(formula = Salary ~ .,
data = dataset)
#Fitting Polynomial Regression to dataset
dataset$Level2 = dataset$Level^2
poly_reg= lm(formula = Salary ~ .,
data= dataset)
#Visualising Linear Regression details
library(ggplot2)
ggplot()+
geom_point(aes(x=dataset$Level , y=dataset$Salary),
color = 'red')+
geom_line(aes(x=dataset$Level , y=dataset$predict(lin_reg, newdata=dataset)),
color = 'blue')+
ggtitle('Truth or Bluff: Linear Regression')+
xlab("Level")+
ylab('Salary')
#Visulising Polynomial Reression details
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
#Polynomial Regression
#problems with non-linear relationships
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset= dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting Linear Regression to datset
lin_reg= lm(formula = Salary ~ .,
data = dataset)
#Fitting Polynomial Regression to dataset
dataset$Level2 = dataset$Level^2
poly_reg= lm(formula = Salary ~ .,
data= dataset)
#Visualising Linear Regression details
library(ggplot2)
ggplot()+
geom_point(aes(x=dataset$Level , y=dataset$Salary),
color = 'red')+
geom_line(aes(x=dataset$Level , y=dataset$predict(lin_reg, newdata=dataset)),
color = 'blue')+
ggtitle('Truth or Bluff: Linear Regression')+
xlab("Level")+
ylab('Salary')
#Visulising Polynomial Reression details
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
#Fitting Polynomial Regression to dataset
dataset$Level2 = dataset$Level^4
#Polynomial Regression
#problems with non-linear relationships
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset= dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting Linear Regression to datset
lin_reg= lm(formula = Salary ~ .,
data = dataset)
#Fitting Polynomial Regression to dataset
dataset$Level2 = dataset$Level^4
poly_reg= lm(formula = Salary ~ .,
data= dataset)
#Visualising Linear Regression details
library(ggplot2)
ggplot()+
geom_point(aes(x=dataset$Level , y=dataset$Salary),
color = 'red')+
geom_line(aes(x=dataset$Level , y=dataset$predict(lin_reg, newdata=dataset)),
color = 'blue')+
ggtitle('Truth or Bluff: Linear Regression')+
xlab("Level")+
ylab('Salary')
#Visulising Polynomial Reression details
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
#Predicting a new result with linear regression
#Predicting a new result with polynomial regression
y_pred= predict(lin_reg, newdata = data.frame(Level=6.5))
y_pred
View(dataset)
y_pred= predict(poly_reg, newdata = data.frame(Level=6.5,
Level2= 6.5^2))
y_pred
# Regression Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$Salary, SplitRatio = 2/3)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting the Regression Model to the dataset
# Create your regressor here
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the Regression Model results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
# Visualising the Regression Model results (for higher resolution and smoother curve)
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
